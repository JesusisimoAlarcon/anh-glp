{"version":3,"sources":["Components/HabilitarCamion/index.js","Images/garrafa.png","Images/garrafas.png","Components/Inicio/index.js","Images/logoanh.png","Images/gas.png","Components/CamionesList/index.js","Components/RegistrarCompras/index.js","Components/Consultas/ComprasFecha/index.js","Components/Consultas/ClientesMasFecuentes/index.js","App.js","reportWebVitals.js","index.js"],"names":["HabilitarCamion","useState","donwload","setDonwload","format","Date","fecha","setFecha","vendedor","setVendedor","cantidadGarrafas","setCantidadGarrafas","iddis","setIddis","distribuidores","setDistribuidores","useEffect","getDistribuidores","a","Axios","get","data","console","log","registrarCamion","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","camion","CAMION_NUMERO","CAMION_VENTA_MAXIMA","CAMION_UBICACION","CAMION_VENDEDOR","CAMION_FECHA","IDDIS","post","state","success","Row","className","Col","lg","Card","CardHeader","Spinner","type","style","width","height","color","size","CardBody","FormGroup","Input","name","value","onChange","e","target","placeholder","map","d","DIS_NOMBRE","DIS_CIUDAD","Button","onClick","block","Inicio","compras","setCompras","getCompras","axios","columns","selector","sortable","wrap","row","COMPRA_FECHA","locale","esLocale","cell","NUMERO_GARRAFA","src","garrafas","garrafa","alt","CLIENTE_ACTIVIDAD","DIS_DIRECCION","Badge","pill","length","title","noHeader","pagination","progressComponent","progressPending","dense","CamionesList","camiones","setCamiones","history","useHistory","getCamiones","buttom","center","outline","push","IDCAMION","gas","Alert","RegistrarCompras","fechaParams","useParams","idcamion","id","update","setUpdate","ci","setCi","nombrecompleto","setNombrecompleto","direccion","setDireccion","uso","setUso","setGarrafas","descripcion","setDescripcion","cliente","setCliente","differenceInDays","COMPRA_HORA","getClienteByCi","CLIENTE_NOMBRE","CLIENTE_DIRECCION","saveCompra","respCliente","CLIENTE_CI","compra","DESCRIPCION","IDCLIENTE","new_id","IDUSUARIO","disabled","readOnly","ComprasFecha","bsSize","ClientesMasFrecuentes","distrito","setDistrito","ano","setAno","mes","setMes","distritos","setDistritos","anos","setAnos","meses","setMeses","strMeses","getDistritos","getYearsByDistrito","getMonthByYearAndDistrito","gestion","getComprasFrecuentes","Label","ANO","m","MES","dataKey","labels","c","datasets","backgroundColor","i","hoverBackgroundColor","App","isOpen","setIsOpen","Container","Logo","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","NavbarText","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.2000dfc9.chunk.js","sourcesContent":["import Axios from 'axios';\r\nimport { format } from 'date-fns'\r\nimport React, { Fragment, useState, useEffect } from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Col, FormGroup, Input, Row, Spinner } from 'reactstrap'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function HabilitarCamion() {\r\n    const [donwload, setDonwload] = useState(false);\r\n    const [fecha, setFecha] = useState(format(new Date(), 'yyyy-MM-dd'));\r\n    const [vendedor, setVendedor] = useState('');\r\n    const [cantidadGarrafas, setCantidadGarrafas] = useState('');\r\n    const [iddis, setIddis] = useState('');\r\n    const [distribuidores, setDistribuidores] = useState([]);\r\n    useEffect(() => {\r\n        getDistribuidores()\r\n    }, [])\r\n\r\n    const getDistribuidores = async () => {\r\n        setDonwload(true);\r\n        const distribuidores = await (await Axios.get('http://161.35.66.154:4555/api/distribuidor')).data;\r\n        setDonwload(false);\r\n        setDistribuidores(distribuidores);\r\n        console.log(distribuidores)\r\n    }\r\n\r\n    const registrarCamion = async () => {\r\n        if (!(vendedor && cantidadGarrafas && iddis)) {\r\n            toast.error('🦄 No deje campos vacios!', {\r\n                position: \"top-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n            });\r\n        } else {\r\n            const camion = {\r\n                CAMION_NUMERO: 'CAMION01',\r\n                CAMION_VENTA_MAXIMA: cantidadGarrafas,\r\n                CAMION_UBICACION: 'FEDERICO ROMAN',\r\n                CAMION_VENDEDOR: vendedor,\r\n                CAMION_FECHA: fecha,\r\n                IDDIS: iddis,\r\n            }\r\n            const resp = await (await Axios.post('http://161.35.66.154:4555/api/camion', camion)).data;\r\n            if (resp.state) {\r\n                toast.success('🦄 Habilitacion de camion realizada de forma correcta!', {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined\r\n                });\r\n            }\r\n            else\r\n                toast.error('🦄 Problemas al habilitar un camion!', {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row className='text-center'>\r\n                <Col lg={3}>\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <Card className='mt-2' >\r\n                        <CardHeader>\r\n                            {'HABILITACION DE SALIDA DE CAMIONES GLP'}\r\n                        </CardHeader>\r\n                        {donwload ?\r\n                            <div className='text-center'>\r\n                                <Spinner type='grow' style={{ width: '5rem', height: '5rem' }} color='info' size='md' />\r\n                            </div>\r\n                            :\r\n                            <CardBody>\r\n                                <FormGroup>\r\n                                    <Input\r\n                                        name='fecha'\r\n                                        type='date'\r\n                                        value={fecha}\r\n                                        onChange={e => setFecha(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Input\r\n                                        name='vendedor'\r\n                                        type='text'\r\n                                        placeholder={'VENDEDOR'}\r\n                                        value={vendedor}\r\n                                        onChange={e => setVendedor(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Input\r\n                                        name='cantidadGarrafas'\r\n                                        type='number'\r\n                                        placeholder={'CANTIDAD DE GARRAFAS'}\r\n                                        value={cantidadGarrafas}\r\n                                        onChange={e => setCantidadGarrafas(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Input\r\n                                        name='IDDIS'\r\n                                        value={iddis}\r\n                                        type='select'\r\n                                        onChange={e => setIddis(e.target.value)}\r\n                                    >\r\n                                        <option value=\"\">{'-'}</option>\r\n                                        {distribuidores.map(d =>\r\n                                            <option value={d.IDDIS} key={d.IDDIS}>\r\n                                                {d.DIS_NOMBRE + ' - ' + d.DIS_CIUDAD}\r\n                                            </option>\r\n                                        )}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                                <Button\r\n                                    color='success'\r\n                                    onClick={registrarCamion}\r\n                                    block>\r\n                                    {'HABILITAR'}\r\n                                </Button>\r\n                            </CardBody>\r\n                        }\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={3}>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/garrafa.80849e85.png\";","export default __webpack_public_path__ + \"static/media/garrafas.61fbe955.png\";","import React, { useState, useEffect, Fragment } from 'react';\r\n\r\nimport DataTable from 'react-data-table-component';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport garrafa from '../../Images/garrafa.png';\r\nimport garrafas from '../../Images/garrafas.png';\r\nimport esLocale from 'date-fns/locale/es';\r\nimport { Badge, Col, Row, Spinner } from 'reactstrap';\r\n\r\nconst Inicio = () => {\r\n    const [donwload, setDonwload] = useState(false);\r\n    const [compras, setCompras] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getCompras()\r\n    }, [])\r\n\r\n    const getCompras = async () => {\r\n        setDonwload(true);\r\n        const compras = await (await axios.get('http://161.35.66.154:4555/api/compra')).data;\r\n        setDonwload(false);\r\n        setCompras(compras);\r\n        console.log(compras)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'FECHA COMPRA',\r\n            selector: 'COMPRA_FECHA',\r\n            sortable: true,\r\n            wrap: true,\r\n            format: row => <div>{format(new Date(row.COMPRA_FECHA), 'dd/MMM/yy', { locale: esLocale })}</div>\r\n        },\r\n        {\r\n            name: 'HORA COMPRA',\r\n            selector: 'COMPRA_HORA',\r\n            sortable: true,\r\n            wrap: true\r\n\r\n        },\r\n        {\r\n            name: 'GARRAFAS',\r\n            selector: 'NUMERO_GARRAFA',\r\n            sortable: true,\r\n            wrap: true,\r\n            cell: row => <div>{row.NUMERO_GARRAFA}<img src={row.NUMERO_GARRAFA > 1 ? garrafas : garrafa} alt=\"\" width='35%' /></div>\r\n        },\r\n        {\r\n            name: 'CI CLIENTE',\r\n            selector: 'CLIENTE_CI',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'CLIENTE',\r\n            selector: 'CLIENTE_NOMBRE',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'ACTIVIDAD',\r\n            selector: 'CLIENTE_ACTIVIDAD',\r\n            sortable: true,\r\n            wrap: true,\r\n            cell: row => <small>{row.CLIENTE_ACTIVIDAD}</small>\r\n        },\r\n        {\r\n            name: 'CAMION',\r\n            selector: 'CAMION_NUMERO',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'VENDEDOR',\r\n            selector: 'CAMION_VENDEDOR',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'DISTRIBUIDORA',\r\n            selector: 'DIS_NOMBRE',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'DIRECCION DE COMPRA',\r\n            selector: 'DIS_DIRECCION',\r\n            sortable: true,\r\n            wrap: true,\r\n            cell: row => <small>{row.DIS_DIRECCION}</small>\r\n        },\r\n    ];\r\n    return (\r\n        <Fragment>\r\n            <Row className='text-center'>\r\n                <Col>\r\n                    <Badge color='success'>\r\n                        <Badge pill color='light'>{compras.length}</Badge>\r\n                        {' COMPRAS REGISTRADAS'}\r\n                    </Badge>\r\n                </Col>\r\n            </Row>\r\n            <Row className='mt-2 pt-2'>\r\n                <Col>\r\n                    <DataTable\r\n                        title=\"ULTIMAS COMPRAS REGISTRADAS\"\r\n                        columns={columns}\r\n                        data={compras}\r\n                        noHeader\r\n                        pagination\r\n                        progressComponent={<Spinner type='grow' style={{ width: '5rem', height: '5rem' }} color='info' size='md' />}\r\n                        progressPending={donwload}\r\n                        dense\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default (Inicio);\r\n","export default __webpack_public_path__ + \"static/media/logoanh.cb217faa.png\";","export default __webpack_public_path__ + \"static/media/gas.ad7052bd.png\";","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Alert, Button, Col, Row, Spinner } from 'reactstrap';\r\nimport DataTable from 'react-data-table-component';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport gas from '../../Images/gas.png';\r\n//import { Link } from 'react-router-dom';\r\n//import { withRouter } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst CamionesList = () => {\r\n    const [donwload, setDonwload] = useState(false);\r\n    const [camiones, setCamiones] = useState([]);\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getCamiones()\r\n    }, [])\r\n\r\n    const getCamiones = async () => {\r\n        setDonwload(true);\r\n        const camiones = await (await axios.get('http://161.35.66.154:4555/api/camion')).data;\r\n        setDonwload(false);\r\n        setCamiones(camiones);\r\n        console.log(camiones)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: '',\r\n            wrap: true,\r\n            buttom: true,\r\n            center: true,\r\n            cell: row => <Button\r\n                className='m-1 p-1'\r\n                outline\r\n                color='success'\r\n                size='sm'\r\n                //onClick={() => history.push(`/registrarcompras/${format(new Date(row.CAMION_FECHA), 'yyyy-MM-dd')}/${row.IDCAMION}`)}\r\n                onClick={() => history.push(`/registrarcompras/${(row.CAMION_FECHA)}/${row.IDCAMION}`)}\r\n            >\r\n                <img src={gas} alt=\"\" width='20' />\r\n                <small>{'REGISTRAR'}</small>\r\n            </Button >\r\n        },\r\n        {\r\n            name: 'FECHA COMPRA',\r\n            selector: 'CAMION_FECHA',\r\n            //sortable: true,\r\n            wrap: true,\r\n            format: row => <div>{format(new Date(row.CAMION_FECHA), 'dd/MM/yy')}</div>\r\n        },\r\n        {\r\n            name: 'VENDEDOR',\r\n            selector: 'CAMION_VENDEDOR',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'CANTIDAD GARRAFAS',\r\n            selector: 'CAMION_VENTA_MAXIMA',\r\n            sortable: true,\r\n            wrap: true,\r\n            center: true\r\n        },\r\n\r\n        {\r\n            name: 'DISTRIBUIDORA',\r\n            selector: 'DIS_NOMBRE',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n\r\n\r\n    ];\r\n    return (\r\n        <Fragment>\r\n            <Alert color='info' className='m-2 text-center'>\r\n                <small>\r\n                    {'Seleccione el camion al cual se registraran sus compras'}\r\n                </small>\r\n            </Alert>\r\n            <Row className='mt-2 pt-2'>\r\n                <Col>\r\n                    <DataTable\r\n                        title=\"ULTIMAS COMPRAS REGISTRADAS\"\r\n                        columns={columns}\r\n                        data={camiones}\r\n                        noHeader\r\n                        pagination\r\n                        progressComponent={<Spinner type='grow' style={{ width: '5rem', height: '5rem' }} color='info' size='md' />}\r\n                        progressPending={donwload}\r\n                        dense\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default (CamionesList);","import React, { Fragment, useState } from 'react'\r\nimport { Alert, Button, Card, CardBody, CardHeader, Col, Input, Row, Spinner } from 'reactstrap'\r\nimport { useParams } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport DataTable from 'react-data-table-component';\r\nimport { format } from 'date-fns';\r\nimport { differenceInDays } from 'date-fns'\r\nexport default function RegistrarCompras() {\r\n    let fechaParams = useParams().fecha;\r\n    let fecha = format(new Date(useParams().fecha), 'yyyy-MM-dd');\r\n    let idcamion = useParams().id;\r\n    const [update, setUpdate] = useState(false)\r\n    const [donwload, setDonwload] = useState(false);\r\n    const [ci, setCi] = useState('');\r\n    const [nombrecompleto, setNombrecompleto] = useState('');\r\n    const [direccion, setDireccion] = useState('');\r\n    const [uso, setUso] = useState('');\r\n    const [garrafas, setGarrafas] = useState('');\r\n    const [descripcion, setDescripcion] = useState('');\r\n    const [cliente, setCliente] = useState('');\r\n    const [compras, setCompras] = useState([]);\r\n    const columns = [\r\n        {\r\n            name: 'ULTIMA COMPRA (Dias)',\r\n            selector: 'COMPRA_FECHA',\r\n            //sortable: true,\r\n            center: true,\r\n            wrap: true,\r\n            format: row => <div>{differenceInDays(new Date(fechaParams), new Date(row.COMPRA_FECHA))}</div>\r\n        },\r\n        {\r\n            name: 'FECHA COMPRA',\r\n            selector: 'COMPRA_FECHA',\r\n            //sortable: true,\r\n            wrap: true,\r\n            format: row => <div>{format(new Date(row.COMPRA_FECHA), 'dd/MM/yy') + ' ' + row.COMPRA_HORA}</div>\r\n        },\r\n        /*\r\n        {\r\n            name: 'HORA COMPRA',\r\n            selector: 'COMPRA_HORA',\r\n            //sortable: true,\r\n            wrap: true,\r\n            //format: row => <div>{format(new Date(row.COMPRA_HORA), 'HH:mm:ss')}</div>\r\n        },\r\n        */\r\n        {\r\n            name: 'GARRAFAS',\r\n            selector: 'NUMERO_GARRAFA',\r\n            sortable: true,\r\n            wrap: true,\r\n            center: true\r\n        },\r\n        {\r\n            name: 'CAMION',\r\n            selector: 'CAMION_NUMERO',\r\n            sortable: true,\r\n            wrap: true,\r\n            center: true\r\n        },\r\n\r\n        {\r\n            name: 'DISTRIBUIDORA',\r\n            selector: 'DIS_NOMBRE',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n\r\n\r\n    ];\r\n    const getClienteByCi = async () => {\r\n        const cliente = await (await Axios.get('http://161.35.66.154:4555/api/cliente/ci/' + ci)).data;\r\n        setCliente(cliente[0]);\r\n        if (cliente[0]) {\r\n            setNombrecompleto(cliente[0].CLIENTE_NOMBRE);\r\n            setDireccion(cliente[0].CLIENTE_DIRECCION);\r\n            setUso(cliente[0].CLIENTE_ACTIVIDAD);\r\n            setUpdate(true)\r\n            const compras = await (await Axios.get('http://161.35.66.154:4555/api/compra/cliente/' + ci)).data;\r\n            setUpdate(false)\r\n            setCompras(compras);\r\n        }\r\n        setDonwload(true)\r\n        console.log(cliente)\r\n    }\r\n\r\n    const saveCompra = async () => {\r\n        let respCliente = {};\r\n        if (!cliente) {\r\n            const cliente = {\r\n                CLIENTE_CI: ci,\r\n                CLIENTE_NOMBRE: nombrecompleto,\r\n                CLIENTE_DIRECCION: direccion,\r\n                CLIENTE_ACTIVIDAD: uso\r\n            }\r\n            respCliente = await (await Axios.post('http://161.35.66.154:4555/api/cliente', cliente)).data;\r\n            if (respCliente.state)\r\n                toast.success('🦄 Cliente registrado de forma correcta!', {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined\r\n                });\r\n        }\r\n\r\n\r\n        const compra = {\r\n            NUMERO_GARRAFA: garrafas,\r\n            COMPRA_FECHA: fecha,\r\n            COMPRA_HORA: format(new Date(), 'HH:mm:ss'),\r\n            DESCRIPCION: descripcion,\r\n            IDCAMION: idcamion,\r\n            IDCLIENTE: cliente ? cliente.IDCLIENTE : respCliente.new_id,\r\n            IDUSUARIO: 2\r\n        };\r\n        const resp = await (await Axios.post('http://161.35.66.154:4555/api/compra', compra)).data;\r\n        if (resp.state) {\r\n            toast.success('🦄 Compra registrada de forma correcta!', {\r\n                position: \"top-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n            });\r\n            setCliente('')\r\n            setDonwload(false)\r\n            setCi('')\r\n            setNombrecompleto('')\r\n            setDireccion('')\r\n            setDescripcion('')\r\n            setUso('')\r\n            setGarrafas('')\r\n        }\r\n        else\r\n            toast.error('🦄 Problemas al registrar una compra!', {\r\n                position: \"top-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row className='text-center mt-2'>\r\n                <Col lg={2}></Col>\r\n                <Col lg={8}>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            {`REGISTRAR COMPRAS DE ${fecha}`}\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Input\r\n                                name='ci'\r\n                                type='text'\r\n                                placeholder='CEDULA DE IDENTIDAD'\r\n                                value={ci}\r\n                                onChange={e => setCi(e.target.value)}\r\n                            />\r\n                            <Button\r\n                                color='success'\r\n                                disabled={ci.length === 0}\r\n                                block\r\n                                onClick={getClienteByCi}\r\n                            >{'CONSULTAR'}</Button>\r\n                            {donwload &&\r\n                                <div>\r\n                                    {cliente ?\r\n                                        <div>\r\n                                            <Alert color={'success'}>\r\n\r\n                                                <b>Felicidades!</b>{' El cliente ya esta registrado. A continuacion verifica sus ultimas compras.'}\r\n                                            </Alert>\r\n                                            <DataTable\r\n                                                title=\"ULTIMAS COMPRAS REGISTRADAS\"\r\n                                                columns={columns}\r\n                                                data={compras}\r\n                                                noHeader\r\n                                                //pagination\r\n                                                progressComponent={<Spinner type='grow' style={{ width: '5rem', height: '5rem' }} color='info' size='md' />}\r\n                                                progressPending={update}\r\n                                                dense\r\n                                            />\r\n                                            {compras[0] && differenceInDays(new Date(fechaParams), new Date(compras[0].COMPRA_FECHA)) < 2 &&\r\n                                                <Alert color={'danger'}>\r\n                                                    <b>Cuidado!</b>{' Este cliente esta comprando muy seguido.'}\r\n                                                </Alert>\r\n                                            }\r\n                                        </div>\r\n                                        :\r\n                                        <Alert color={'warning'}>\r\n                                            <b>Excelente!</b>{' El cliente esta haciendo su primera compra.. registralo.'}\r\n                                        </Alert>\r\n                                    }\r\n\r\n                                    <Input\r\n                                        readOnly\r\n                                        value={ci}\r\n                                    />\r\n                                    <Input\r\n                                        name='nombrecompleto'\r\n                                        readOnly={cliente ? true : false}\r\n                                        //value={cliente ? cliente.CLIENTE_NOMBRE : nombrecompleto}\r\n                                        value={nombrecompleto}\r\n                                        type='text'\r\n                                        placeholder='NOMBRE COMPLETO'\r\n                                        onChange={e => setNombrecompleto(e.target.value)}\r\n                                    />\r\n                                    <Input\r\n                                        name='direccion'\r\n                                        readOnly={cliente ? true : false}\r\n                                        //value={cliente ? cliente.CLIENTE_DIRECCION : direccion}\r\n                                        value={direccion}\r\n                                        type='text'\r\n                                        placeholder='DIRECCION'\r\n                                        onChange={e => setDireccion(e.target.value)}\r\n                                    />\r\n                                    <Input\r\n                                        name='uso'\r\n                                        value={uso}\r\n                                        disabled={cliente ? true : false}\r\n                                        type='select'\r\n                                        placeholder='NOMBRE COMPLETO'\r\n                                        onChange={e => setUso(e.target.value)}\r\n                                    >\r\n                                        <option value=\"\">{' - '}</option>\r\n                                        <option value=\"DOMICILIARIO\">USO DOMICILIAR</option>\r\n                                        <option value=\"COMERCIAL\">USO COMERCIAL</option>\r\n                                    </Input>\r\n                                    <Input\r\n                                        name='garrafas'\r\n                                        value={garrafas}\r\n                                        type='number'\r\n                                        placeholder='CANTIDAD DE GARRAFAS'\r\n                                        onChange={e => setGarrafas(e.target.value)}\r\n                                    />\r\n                                    <Input\r\n                                        name='descripcion'\r\n                                        value={descripcion}\r\n                                        type='text'\r\n                                        placeholder='DESCRIPCION'\r\n                                        onChange={e => setDescripcion(e.target.value)}\r\n                                    />\r\n                                    <Button color='primary' onClick={saveCompra} block>\r\n                                        {cliente ? 'REGISTRAR COMPRA' : 'REGISTRAR CLIENTE Y COMPRA'}\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={2}></Col>\r\n\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\n\r\nimport DataTable from 'react-data-table-component';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport garrafa from '../../../Images/garrafa.png';\r\nimport garrafas from '../../../Images/garrafas.png';\r\nimport esLocale from 'date-fns/locale/es';\r\nimport { Badge, Card, CardBody, CardHeader, Col, Input, Row, Spinner } from 'reactstrap';\r\n\r\nconst ComprasFecha = () => {\r\n    const [donwload, setDonwload] = useState(false);\r\n    const [compras, setCompras] = useState([]);\r\n    const [fecha, setFecha] = useState(format(new Date(), 'yyyy-MM-dd'));\r\n\r\n    useEffect((fecha) => {\r\n        getCompras(fecha);\r\n    }, [])\r\n\r\n    const getCompras = async (fecha) => {\r\n        setDonwload(true);\r\n        const compras = await (await axios.get(`http://161.35.66.154:4555/api/compra/fecha/${fecha}`)).data;\r\n        setDonwload(false);\r\n        setCompras(compras);\r\n        console.log(compras)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'FECHA COMPRA',\r\n            selector: 'COMPRA_FECHA',\r\n            sortable: true,\r\n            wrap: true,\r\n            format: row => <div>{format(new Date(row.COMPRA_FECHA), 'dd/MMM/yy', { locale: esLocale })}</div>\r\n        },\r\n        {\r\n            name: 'HORA COMPRA',\r\n            selector: 'COMPRA_HORA',\r\n            sortable: true,\r\n            wrap: true\r\n\r\n        },\r\n        {\r\n            name: 'GARRAFAS',\r\n            selector: 'NUMERO_GARRAFA',\r\n            sortable: true,\r\n            wrap: true,\r\n            cell: row => <div>{row.NUMERO_GARRAFA}<img src={row.NUMERO_GARRAFA > 1 ? garrafas : garrafa} alt=\"\" width='35%' /></div>\r\n        },\r\n        {\r\n            name: 'CI CLIENTE',\r\n            selector: 'CLIENTE_CI',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'CLIENTE',\r\n            selector: 'CLIENTE_NOMBRE',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'ACTIVIDAD',\r\n            selector: 'CLIENTE_ACTIVIDAD',\r\n            sortable: true,\r\n            wrap: true,\r\n            cell: row => <small>{row.CLIENTE_ACTIVIDAD}</small>\r\n        },\r\n        {\r\n            name: 'CAMION',\r\n            selector: 'CAMION_NUMERO',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'VENDEDOR',\r\n            selector: 'CAMION_VENDEDOR',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'DISTRIBUIDORA',\r\n            selector: 'DIS_NOMBRE',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'DIRECCION DE COMPRA',\r\n            selector: 'DIS_DIRECCION',\r\n            sortable: true,\r\n            wrap: true,\r\n            cell: row => <small>{row.DIS_DIRECCION}</small>\r\n        },\r\n    ];\r\n    return (\r\n        <Fragment>\r\n            <Row className='text-center mt-2'>\r\n                <Col>\r\n\r\n                    <Card>\r\n                        <CardHeader>{'CONSULTA DE COMPRAS REALIZADAS POR FECHA'}</CardHeader>\r\n                        <CardBody>\r\n\r\n\r\n\r\n                            <Row className='text-center'>\r\n                                <Col lg={4}>\r\n                                    <Badge color='success'>\r\n                                        <Badge pill color='light'>{compras.length}</Badge>\r\n                                        {' COMPRAS REGISTRADAS'}\r\n                                    </Badge>\r\n                                </Col>\r\n                                <Col lg={4}>\r\n                                    <Input\r\n                                        name='fecha'\r\n                                        type='date'\r\n                                        bsSize='sm'\r\n                                        value={fecha}\r\n                                        onChange={e => {\r\n                                            getCompras(e.target.value);\r\n                                            setFecha(e.target.value)\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                                <Col lg={4}>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='mt-2 pt-2'>\r\n                                <Col>\r\n                                    <DataTable\r\n                                        title=\"ULTIMAS COMPRAS REGISTRADAS\"\r\n                                        columns={columns}\r\n                                        data={compras}\r\n                                        noHeader\r\n                                        pagination\r\n                                        progressComponent={<Spinner type='grow' style={{ width: '5rem', height: '5rem' }} color='info' size='md' />}\r\n                                        progressPending={donwload}\r\n                                        dense\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default (ComprasFecha);\r\n","import Axios from 'axios';\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport { Badge, Col, FormGroup, Input, Label, Row, Spinner } from 'reactstrap';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nimport DataTable from 'react-data-table-component';\r\nexport default function ClientesMasFrecuentes() {\r\n    const [donwload, setDonwload] = useState(false);\r\n    const [distrito, setDistrito] = useState('');\r\n    const [ano, setAno] = useState('');\r\n    const [mes, setMes] = useState('');\r\n    const [distritos, setDistritos] = useState([]);\r\n    const [anos, setAnos] = useState([]);\r\n    const [meses, setMeses] = useState([]);\r\n    const [compras, setCompras] = useState([]);\r\n    const strMeses = [\r\n        '',\r\n        'ENERO',\r\n        'FEBRERO',\r\n        'MARZO',\r\n        'ABRIL',\r\n        'MAYO',\r\n        'JUNIO',\r\n        'JULIO',\r\n        'AGOSTO',\r\n        'SEPTIEMBRE',\r\n        'OCTUBRE',\r\n        'NOVIEMBRE',\r\n        'DICIEMBRE'\r\n    ]\r\n    useEffect(() => {\r\n        getDistritos();\r\n    }, [])\r\n\r\n    const getDistritos = async () => {\r\n        setDonwload(true);\r\n        const distritos = await (await Axios.get(`http://161.35.66.154:4555/api/compra/distritos/`)).data;\r\n        setDonwload(false);\r\n        setDistritos(distritos)\r\n    }\r\n\r\n    const getYearsByDistrito = async (distrito) => {\r\n        const anos = await (await Axios.get(`http://161.35.66.154:4555/api/compra/years/` + distrito)).data;\r\n        setAnos(anos);\r\n        console.log(anos)\r\n    }\r\n\r\n    const getMonthByYearAndDistrito = async (gestion) => {\r\n        const meses = await (await Axios.get(`http://161.35.66.154:4555/api/compra/year/distrito/` + gestion + '/' + distrito)).data;\r\n        setMeses(meses);\r\n        console.log(meses)\r\n    }\r\n\r\n    const getComprasFrecuentes = async (mes) => {\r\n        setDonwload(true);\r\n        const compras = await (await Axios.get(`http://161.35.66.154:4555/api/compra/month/year/distrito/${mes}/${ano}/${distrito}`)).data\r\n        setDonwload(false);\r\n        setCompras(compras);\r\n        console.log(compras)\r\n    }\r\n    const columns = [\r\n        {\r\n            name: 'CI CLIENTE',\r\n            selector: 'CLIENTE_CI',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'CLIENTE',\r\n            selector: 'CLIENTE_NOMBRE',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'COMPRAS',\r\n            selector: 'compras',\r\n            sortable: true,\r\n            wrap: true,\r\n            center: true\r\n        },\r\n        {\r\n            name: 'CANT GARRAFAS',\r\n            selector: 'garrafas',\r\n            sortable: true,\r\n            wrap: true,\r\n            center: true\r\n        },\r\n        /*\r\n        {\r\n            name: 'DISTRIBUIDORA',\r\n            selector: 'DIS_NOMBRE',\r\n            sortable: true,\r\n            wrap: true\r\n        },\r\n        {\r\n            name: 'CIUDAD',\r\n            selector: 'DIS_CIUDAD',\r\n            sortable: true,\r\n            wrap: true,\r\n        },\r\n        */\r\n    ];\r\n    return (\r\n        <Fragment>\r\n            <Row className='text-center'>\r\n                <Col lg={4}>\r\n                    <FormGroup>\r\n                        <Label>{'DISTRITO'}</Label>\r\n                        <Input\r\n                            name=''\r\n                            value={distrito}\r\n                            type='select'\r\n                            bsSize='sm'\r\n                            onChange={e => {\r\n                                //setAnos([])\r\n                                //setMeses([])\r\n                                getYearsByDistrito(e.target.value);\r\n                                setDistrito(e.target.value)\r\n                            }}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {distritos.map(d =>\r\n                                <option key={d.DIS_NOMBRE} value={d.DIS_NOMBRE}>{d.DIS_NOMBRE + ' - ' + d.DIS_CIUDAD}</option>\r\n                            )}\r\n                        </Input>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col lg={4}>\r\n                    <FormGroup>\r\n                        <Label>{'GESTION'}</Label>\r\n                        <Input\r\n                            name='ano'\r\n                            value={ano}\r\n                            type='select'\r\n                            bsSize='sm'\r\n                            onChange={e => {\r\n                                //setMeses([])\r\n                                getMonthByYearAndDistrito(e.target.value);\r\n                                setAno(e.target.value)\r\n                            }}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {anos.map(a =>\r\n                                <option value={a.ANO} key={a.ANO}>{a.ANO}</option>\r\n                            )}\r\n                        </Input>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col lg={4}>\r\n                    <FormGroup>\r\n                        <Label>{'MES'}</Label>\r\n                        <Input\r\n                            name='mes'\r\n                            value={mes}\r\n                            type='select'\r\n                            bsSize='sm'\r\n                            onChange={e => {\r\n                                getComprasFrecuentes(e.target.value);\r\n                                setMes(e.target.value)\r\n                            }}\r\n                        >\r\n                            <option value=\"\"></option>\r\n                            {meses.map(m =>\r\n                                <option value={m.MES} key={m.MES}>{strMeses[m.MES]}</option>\r\n                            )}\r\n                        </Input>\r\n                    </FormGroup>\r\n                </Col>\r\n                {/*}\r\n                <Col lg={2}>\r\n                    <FormGroup>\r\n                        <Label>{'  *  '}</Label>\r\n                        <Button size='sm' block color='success'>\r\n                            <small>\r\n                                {'CONSULTAR'}\r\n                            </small>\r\n                        </Button>\r\n                    </FormGroup>\r\n                </Col>\r\n                {*/}\r\n            </Row>\r\n            {mes &&\r\n                <div>\r\n                    <Row className='text-center'>\r\n                        <Col>\r\n                            <Badge>{strMeses[mes] + ' / ' + ano + '   -   ' + distrito}</Badge>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='text-center mt-2 pt-2'>\r\n                        <Col lg={6}>\r\n                            <Pie dataKey=\"value\" data={{\r\n                                labels: compras.map(c => c.CLIENTE_NOMBRE),\r\n                                datasets: [{\r\n                                    data: compras.map(c => c.garrafas),\r\n                                    backgroundColor: compras.map((c, i) => i % 2 === 0 ? '#2fa4e7' :\r\n                                        '#73a839'),\r\n                                    hoverBackgroundColor:\r\n                                        compras.map((c, i) => i % 2 === 0 ? '#2fa4e7' :\r\n                                            '#73a839'),\r\n                                }]\r\n                            }} />\r\n                        </Col>\r\n                        <Col lg={6}>\r\n                            <DataTable\r\n                                title=\"ULTIMAS COMPRAS REGISTRADAS\"\r\n                                columns={columns}\r\n                                data={compras}\r\n                                noHeader\r\n                                pagination\r\n                                progressComponent={<Spinner type='grow' style={{ width: '5rem', height: '5rem' }} color='info' size='md' />}\r\n                                progressPending={donwload}\r\n                                dense\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment, useState } from 'react';\n//import { withRouter } from 'react-router-dom';\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  Container,\n  NavLink\n} from 'reactstrap';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  //NavLink as NavLinkRoute\n} from \"react-router-dom\";\nimport HabilitarCamion from './Components/HabilitarCamion';\nimport Inicio from './Components/Inicio';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Logo from './Images/logoanh.png';\nimport CamionesList from './Components/CamionesList';\nimport RegistrarCompras from './Components/RegistrarCompras';\nimport ComprasFecha from './Components/Consultas/ComprasFecha';\nimport ClientesMasFrecuentes from './Components/Consultas/ClientesMasFecuentes';\n//import { useHistory } from \"react-router-dom\";\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  //let history = useHistory();\n\n  return (\n    <Router>\n      <Fragment>\n        <Container>\n\n          <img src={Logo} alt=\"\" width='150' />\n          <Navbar color=\"light\" light expand=\"md\">\n            <NavbarBrand\n              href=\"/inicio\"\n            //onClick={() => history.push('/')}\n            >\n              {'CONTROL GLP'}\n            </NavbarBrand>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar>\n              <Nav className=\"mr-auto\" navbar>\n                <NavItem>\n                  <NavLink href='/habilitarcamion' >HABILITAR CAMION</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"/listcamiones\">REGISTRAR COMPRAS</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"/comprasfecha\">CONSULTAS</NavLink>\n                </NavItem>\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav caret>\n                    ESTADISTICAS\n              </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem>\n                      <NavLink href='/clientesmasfrecuentes' >CLIENTES FRECUENTES</NavLink>\n                    </DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>\n                      RESUMEN VENTAS MENSUALES\n                </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </Nav>\n              <NavbarText>\n                {\"ANH RIBERALTA\"}\n              </NavbarText>\n            </Collapse>\n          </Navbar>\n          <Switch>\n            <Route path='/registrarcompras/:fecha/:id'>\n              <RegistrarCompras />\n            </Route>\n            <Route path='/habilitarcamion'>\n              <HabilitarCamion />\n            </Route>\n            <Route path='/listcamiones'>\n              <CamionesList />\n            </Route>\n            <Route path='/comprasfecha'>\n              <ComprasFecha />\n            </Route>\n            <Route path='/clientesmasfrecuentes'>\n              <ClientesMasFrecuentes />\n            </Route>\n            <Route path='/'>\n              <Inicio />\n            </Route>\n          </Switch>\n          <ToastContainer />\n        </Container>\n      </Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}